/*
 * TechPort
 * TechPort RESTful API
 *
 * The version of the OpenAPI document: 3.13.2
 * Contact: hq-techport@mail.nasa.gov
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import java.time.LocalDate;
import com.konfigthis.client.model.Project;
import com.konfigthis.client.model.ProjectFindMatchingProjectsResponseInner;
import com.konfigthis.client.model.ProjectListAvailableIdsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectApi
 */
@Disabled
public class ProjectApiTest {

    private static ProjectApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ProjectApi(apiClient);
    }

    /**
     * Returns a list of projects matching the search term.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findMatchingProjectsTest() throws ApiException {
        Long projectId = null;
        String searchQuery = null;
        String missionDirectorate = null;
        String program = null;
        String titleSearch = null;
        List<ProjectFindMatchingProjectsResponseInner> response = api.findMatchingProjects()
                .projectId(projectId)
                .searchQuery(searchQuery)
                .missionDirectorate(missionDirectorate)
                .program(program)
                .titleSearch(titleSearch)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns information about a specific technology project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInfoTest() throws ApiException {
        Long projectId = null;
        Project response = api.getInfo(projectId)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a list of available technology project IDs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAvailableIdsTest() throws ApiException {
        LocalDate updatedSince = null;
        ProjectListAvailableIdsResponse response = api.listAvailableIds(updatedSince)
                .execute();
        // TODO: test validations
    }

}

/*
 * TechPort
 * TechPort RESTful API
 *
 * The version of the OpenAPI document: 3.13.2
 * Contact: hq-techport@mail.nasa.gov
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.LkuCode;
import com.konfigthis.client.model.Location;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * A NASA center/facility associated with an project
 */
@ApiModel(description = "A NASA center/facility associated with an project")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class Organization {
  public static final String SERIALIZED_NAME_ORGANIZATION_ID = "organizationId";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_ID)
  private Long organizationId;

  public static final String SERIALIZED_NAME_ACRONYM = "acronym";
  @SerializedName(SERIALIZED_NAME_ACRONYM)
  private String acronym;

  public static final String SERIALIZED_NAME_FAX = "fax";
  @SerializedName(SERIALIZED_NAME_FAX)
  private String fax;

  public static final String SERIALIZED_NAME_IS_ACTIVE = "isActive";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE)
  private Boolean isActive;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private Location location;

  public static final String SERIALIZED_NAME_LOCATION_ID = "locationId";
  @SerializedName(SERIALIZED_NAME_LOCATION_ID)
  private Long locationId;

  public static final String SERIALIZED_NAME_ORGANIZATION_NAME = "organizationName";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_NAME)
  private String organizationName;

  public static final String SERIALIZED_NAME_ORGANIZATION_TYPE = "organizationType";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_TYPE)
  private LkuCode organizationType;

  public static final String SERIALIZED_NAME_ORGANIZATION_TYPE_ID = "organizationTypeId";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_TYPE_ID)
  private Long organizationTypeId;

  public static final String SERIALIZED_NAME_PARENT_ORGANIZATION_ID = "parentOrganizationId";
  @SerializedName(SERIALIZED_NAME_PARENT_ORGANIZATION_ID)
  private Long parentOrganizationId;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_REPLACEMENT_ORGANIZATION_ID = "replacementOrganizationId";
  @SerializedName(SERIALIZED_NAME_REPLACEMENT_ORGANIZATION_ID)
  private Long replacementOrganizationId;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_NA_ORGANIZATION = "NAOrganization";
  @SerializedName(SERIALIZED_NAME_NA_ORGANIZATION)
  private Boolean naOrganization;

  public static final String SERIALIZED_NAME_EXTERNAL = "external";
  @SerializedName(SERIALIZED_NAME_EXTERNAL)
  private Boolean external;

  public static final String SERIALIZED_NAME_LINK_COUNT = "linkCount";
  @SerializedName(SERIALIZED_NAME_LINK_COUNT)
  private Long linkCount;

  public static final String SERIALIZED_NAME_MUREP_UNIT_ID = "murepUnitId";
  @SerializedName(SERIALIZED_NAME_MUREP_UNIT_ID)
  private Long murepUnitId;

  public static final String SERIALIZED_NAME_EIN = "ein";
  @SerializedName(SERIALIZED_NAME_EIN)
  private String ein;

  public static final String SERIALIZED_NAME_UEI = "uei";
  @SerializedName(SERIALIZED_NAME_UEI)
  private String uei;

  public static final String SERIALIZED_NAME_DUNS_NUMBER = "dunsNumber";
  @SerializedName(SERIALIZED_NAME_DUNS_NUMBER)
  private String dunsNumber;

  public static final String SERIALIZED_NAME_MSI_DATA = "msiData";
  @SerializedName(SERIALIZED_NAME_MSI_DATA)
  private Map<String, List<String>> msiData = null;

  public static final String SERIALIZED_NAME_SET_ASIDE_DATA = "setAsideData";
  @SerializedName(SERIALIZED_NAME_SET_ASIDE_DATA)
  private List<String> setAsideData = null;

  public Organization() {
  }

  public Organization organizationId(Long organizationId) {
    
    
    
    
    this.organizationId = organizationId;
    return this;
  }

   /**
   * Unique ID for this organization
   * @return organizationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique ID for this organization")

  public Long getOrganizationId() {
    return organizationId;
  }


  public void setOrganizationId(Long organizationId) {
    
    
    
    this.organizationId = organizationId;
  }


  public Organization acronym(String acronym) {
    
    
    
    
    this.acronym = acronym;
    return this;
  }

   /**
   * The acronym of the organization
   * @return acronym
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The acronym of the organization")

  public String getAcronym() {
    return acronym;
  }


  public void setAcronym(String acronym) {
    
    
    
    this.acronym = acronym;
  }


  public Organization fax(String fax) {
    
    
    
    
    this.fax = fax;
    return this;
  }

   /**
   * Fax number of the organization
   * @return fax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Fax number of the organization")

  public String getFax() {
    return fax;
  }


  public void setFax(String fax) {
    
    
    
    this.fax = fax;
  }


  public Organization isActive(Boolean isActive) {
    
    
    
    
    this.isActive = isActive;
    return this;
  }

   /**
   * True if the organization is an active organization
   * @return isActive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the organization is an active organization")

  public Boolean getIsActive() {
    return isActive;
  }


  public void setIsActive(Boolean isActive) {
    
    
    
    this.isActive = isActive;
  }


  public Organization location(Location location) {
    
    
    
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Location getLocation() {
    return location;
  }


  public void setLocation(Location location) {
    
    
    
    this.location = location;
  }


  public Organization locationId(Long locationId) {
    
    
    
    
    this.locationId = locationId;
    return this;
  }

   /**
   * Unique ID representing the organizations location
   * @return locationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique ID representing the organizations location")

  public Long getLocationId() {
    return locationId;
  }


  public void setLocationId(Long locationId) {
    
    
    
    this.locationId = locationId;
  }


  public Organization organizationName(String organizationName) {
    
    
    
    
    this.organizationName = organizationName;
    return this;
  }

   /**
   * The name of the organization
   * @return organizationName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the organization")

  public String getOrganizationName() {
    return organizationName;
  }


  public void setOrganizationName(String organizationName) {
    
    
    
    this.organizationName = organizationName;
  }


  public Organization organizationType(LkuCode organizationType) {
    
    
    
    
    this.organizationType = organizationType;
    return this;
  }

   /**
   * Get organizationType
   * @return organizationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LkuCode getOrganizationType() {
    return organizationType;
  }


  public void setOrganizationType(LkuCode organizationType) {
    
    
    
    this.organizationType = organizationType;
  }


  public Organization organizationTypeId(Long organizationTypeId) {
    
    
    
    
    this.organizationTypeId = organizationTypeId;
    return this;
  }

   /**
   * Unique ID for the lookup code representing the organization type
   * @return organizationTypeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique ID for the lookup code representing the organization type")

  public Long getOrganizationTypeId() {
    return organizationTypeId;
  }


  public void setOrganizationTypeId(Long organizationTypeId) {
    
    
    
    this.organizationTypeId = organizationTypeId;
  }


  public Organization parentOrganizationId(Long parentOrganizationId) {
    
    
    
    
    this.parentOrganizationId = parentOrganizationId;
    return this;
  }

   /**
   * Unique ID for the parent organization
   * @return parentOrganizationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique ID for the parent organization")

  public Long getParentOrganizationId() {
    return parentOrganizationId;
  }


  public void setParentOrganizationId(Long parentOrganizationId) {
    
    
    
    this.parentOrganizationId = parentOrganizationId;
  }


  public Organization phone(String phone) {
    
    
    
    
    this.phone = phone;
    return this;
  }

   /**
   * The phone number for the organization
   * @return phone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The phone number for the organization")

  public String getPhone() {
    return phone;
  }


  public void setPhone(String phone) {
    
    
    
    this.phone = phone;
  }


  public Organization replacementOrganizationId(Long replacementOrganizationId) {
    
    
    
    
    this.replacementOrganizationId = replacementOrganizationId;
    return this;
  }

   /**
   * Unique ID for the replacement organization
   * @return replacementOrganizationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique ID for the replacement organization")

  public Long getReplacementOrganizationId() {
    return replacementOrganizationId;
  }


  public void setReplacementOrganizationId(Long replacementOrganizationId) {
    
    
    
    this.replacementOrganizationId = replacementOrganizationId;
  }


  public Organization url(String url) {
    
    
    
    
    this.url = url;
    return this;
  }

   /**
   * The URL for the organization
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The URL for the organization")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    
    
    
    this.url = url;
  }


  public Organization naOrganization(Boolean naOrganization) {
    
    
    
    
    this.naOrganization = naOrganization;
    return this;
  }

   /**
   * True if the organization is in North America
   * @return naOrganization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the organization is in North America")

  public Boolean getNaOrganization() {
    return naOrganization;
  }


  public void setNaOrganization(Boolean naOrganization) {
    
    
    
    this.naOrganization = naOrganization;
  }


  public Organization external(Boolean external) {
    
    
    
    
    this.external = external;
    return this;
  }

   /**
   * True if the organization is external to NASA
   * @return external
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the organization is external to NASA")

  public Boolean getExternal() {
    return external;
  }


  public void setExternal(Boolean external) {
    
    
    
    this.external = external;
  }


  public Organization linkCount(Long linkCount) {
    
    
    
    
    this.linkCount = linkCount;
    return this;
  }

   /**
   * Amount of links this organization has
   * @return linkCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Amount of links this organization has")

  public Long getLinkCount() {
    return linkCount;
  }


  public void setLinkCount(Long linkCount) {
    
    
    
    this.linkCount = linkCount;
  }


  public Organization murepUnitId(Long murepUnitId) {
    
    
    
    
    this.murepUnitId = murepUnitId;
    return this;
  }

   /**
   * Unique identifier assigned to U.S. academic institutions by MUREP.
   * @return murepUnitId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier assigned to U.S. academic institutions by MUREP.")

  public Long getMurepUnitId() {
    return murepUnitId;
  }


  public void setMurepUnitId(Long murepUnitId) {
    
    
    
    this.murepUnitId = murepUnitId;
  }


  public Organization ein(String ein) {
    
    
    
    
    this.ein = ein;
    return this;
  }

   /**
   * The employer identification number (EIN) of the entity.
   * @return ein
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The employer identification number (EIN) of the entity.")

  public String getEin() {
    return ein;
  }


  public void setEin(String ein) {
    
    
    
    this.ein = ein;
  }


  public Organization uei(String uei) {
    
    
    
    
    this.uei = uei;
    return this;
  }

   /**
   * The unique entity identifier (UEI) of the entity.
   * @return uei
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique entity identifier (UEI) of the entity.")

  public String getUei() {
    return uei;
  }


  public void setUei(String uei) {
    
    
    
    this.uei = uei;
  }


  public Organization dunsNumber(String dunsNumber) {
    
    
    
    
    this.dunsNumber = dunsNumber;
    return this;
  }

   /**
   * The DUNS number assigned to the organization.
   * @return dunsNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The DUNS number assigned to the organization.")

  public String getDunsNumber() {
    return dunsNumber;
  }


  public void setDunsNumber(String dunsNumber) {
    
    
    
    this.dunsNumber = dunsNumber;
  }


  public Organization msiData(Map<String, List<String>> msiData) {
    
    
    
    
    this.msiData = msiData;
    return this;
  }

  public Organization putMsiDataItem(String key, List<String> msiDataItem) {
    if (this.msiData == null) {
      this.msiData = new HashMap<>();
    }
    this.msiData.put(key, msiDataItem);
    return this;
  }

   /**
   * A key/value pair of strings describing the organization MSI status by fiscal year.
   * @return msiData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A key/value pair of strings describing the organization MSI status by fiscal year.")

  public Map<String, List<String>> getMsiData() {
    return msiData;
  }


  public void setMsiData(Map<String, List<String>> msiData) {
    
    
    
    this.msiData = msiData;
  }


  public Organization setAsideData(List<String> setAsideData) {
    
    
    
    
    this.setAsideData = setAsideData;
    return this;
  }

  public Organization addSetAsideDataItem(String setAsideDataItem) {
    if (this.setAsideData == null) {
      this.setAsideData = new ArrayList<>();
    }
    this.setAsideData.add(setAsideDataItem);
    return this;
  }

   /**
   * The organization set-aside types.
   * @return setAsideData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The organization set-aside types.")

  public List<String> getSetAsideData() {
    return setAsideData;
  }


  public void setSetAsideData(List<String> setAsideData) {
    
    
    
    this.setAsideData = setAsideData;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the Organization instance itself
   */
  public Organization putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Organization organization = (Organization) o;
    return Objects.equals(this.organizationId, organization.organizationId) &&
        Objects.equals(this.acronym, organization.acronym) &&
        Objects.equals(this.fax, organization.fax) &&
        Objects.equals(this.isActive, organization.isActive) &&
        Objects.equals(this.location, organization.location) &&
        Objects.equals(this.locationId, organization.locationId) &&
        Objects.equals(this.organizationName, organization.organizationName) &&
        Objects.equals(this.organizationType, organization.organizationType) &&
        Objects.equals(this.organizationTypeId, organization.organizationTypeId) &&
        Objects.equals(this.parentOrganizationId, organization.parentOrganizationId) &&
        Objects.equals(this.phone, organization.phone) &&
        Objects.equals(this.replacementOrganizationId, organization.replacementOrganizationId) &&
        Objects.equals(this.url, organization.url) &&
        Objects.equals(this.naOrganization, organization.naOrganization) &&
        Objects.equals(this.external, organization.external) &&
        Objects.equals(this.linkCount, organization.linkCount) &&
        Objects.equals(this.murepUnitId, organization.murepUnitId) &&
        Objects.equals(this.ein, organization.ein) &&
        Objects.equals(this.uei, organization.uei) &&
        Objects.equals(this.dunsNumber, organization.dunsNumber) &&
        Objects.equals(this.msiData, organization.msiData) &&
        Objects.equals(this.setAsideData, organization.setAsideData)&&
        Objects.equals(this.additionalProperties, organization.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(organizationId, acronym, fax, isActive, location, locationId, organizationName, organizationType, organizationTypeId, parentOrganizationId, phone, replacementOrganizationId, url, naOrganization, external, linkCount, murepUnitId, ein, uei, dunsNumber, msiData, setAsideData, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Organization {\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    acronym: ").append(toIndentedString(acronym)).append("\n");
    sb.append("    fax: ").append(toIndentedString(fax)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    organizationName: ").append(toIndentedString(organizationName)).append("\n");
    sb.append("    organizationType: ").append(toIndentedString(organizationType)).append("\n");
    sb.append("    organizationTypeId: ").append(toIndentedString(organizationTypeId)).append("\n");
    sb.append("    parentOrganizationId: ").append(toIndentedString(parentOrganizationId)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    replacementOrganizationId: ").append(toIndentedString(replacementOrganizationId)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    naOrganization: ").append(toIndentedString(naOrganization)).append("\n");
    sb.append("    external: ").append(toIndentedString(external)).append("\n");
    sb.append("    linkCount: ").append(toIndentedString(linkCount)).append("\n");
    sb.append("    murepUnitId: ").append(toIndentedString(murepUnitId)).append("\n");
    sb.append("    ein: ").append(toIndentedString(ein)).append("\n");
    sb.append("    uei: ").append(toIndentedString(uei)).append("\n");
    sb.append("    dunsNumber: ").append(toIndentedString(dunsNumber)).append("\n");
    sb.append("    msiData: ").append(toIndentedString(msiData)).append("\n");
    sb.append("    setAsideData: ").append(toIndentedString(setAsideData)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("organizationId");
    openapiFields.add("acronym");
    openapiFields.add("fax");
    openapiFields.add("isActive");
    openapiFields.add("location");
    openapiFields.add("locationId");
    openapiFields.add("organizationName");
    openapiFields.add("organizationType");
    openapiFields.add("organizationTypeId");
    openapiFields.add("parentOrganizationId");
    openapiFields.add("phone");
    openapiFields.add("replacementOrganizationId");
    openapiFields.add("url");
    openapiFields.add("NAOrganization");
    openapiFields.add("external");
    openapiFields.add("linkCount");
    openapiFields.add("murepUnitId");
    openapiFields.add("ein");
    openapiFields.add("uei");
    openapiFields.add("dunsNumber");
    openapiFields.add("msiData");
    openapiFields.add("setAsideData");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Organization
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!Organization.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Organization is not found in the empty JSON string", Organization.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("acronym") != null && !jsonObj.get("acronym").isJsonNull()) && !jsonObj.get("acronym").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `acronym` to be a primitive type in the JSON string but got `%s`", jsonObj.get("acronym").toString()));
      }
      if ((jsonObj.get("fax") != null && !jsonObj.get("fax").isJsonNull()) && !jsonObj.get("fax").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fax` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fax").toString()));
      }
      // validate the optional field `location`
      if (jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) {
        Location.validateJsonObject(jsonObj.getAsJsonObject("location"));
      }
      if ((jsonObj.get("organizationName") != null && !jsonObj.get("organizationName").isJsonNull()) && !jsonObj.get("organizationName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organizationName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organizationName").toString()));
      }
      // validate the optional field `organizationType`
      if (jsonObj.get("organizationType") != null && !jsonObj.get("organizationType").isJsonNull()) {
        LkuCode.validateJsonObject(jsonObj.getAsJsonObject("organizationType"));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("ein") != null && !jsonObj.get("ein").isJsonNull()) && !jsonObj.get("ein").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ein` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ein").toString()));
      }
      if ((jsonObj.get("uei") != null && !jsonObj.get("uei").isJsonNull()) && !jsonObj.get("uei").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uei` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uei").toString()));
      }
      if ((jsonObj.get("dunsNumber") != null && !jsonObj.get("dunsNumber").isJsonNull()) && !jsonObj.get("dunsNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dunsNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dunsNumber").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("setAsideData") != null && !jsonObj.get("setAsideData").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `setAsideData` to be an array in the JSON string but got `%s`", jsonObj.get("setAsideData").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Organization.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Organization' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Organization> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Organization.class));

       return (TypeAdapter<T>) new TypeAdapter<Organization>() {
           @Override
           public void write(JsonWriter out, Organization value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public Organization read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             Organization instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Organization given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Organization
  * @throws IOException if the JSON string is invalid with respect to Organization
  */
  public static Organization fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Organization.class);
  }

 /**
  * Convert an instance of Organization to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

